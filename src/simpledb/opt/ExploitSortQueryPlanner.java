package simpledb.opt;

import simpledb.tx.Transaction;
import simpledb.query.*;
import simpledb.materialize.MergeJoinPlan;
import simpledb.opt.TablePlanner;
import simpledb.parse.QueryData;
import simpledb.planner.QueryPlanner;

import java.util.*;

/**
 * A query planner that optimizes using a merge-join algorithm.
 * For test purpose of Task5, project 2, CS4322
 * @author jzhu
 */
public class ExploitSortQueryPlanner implements QueryPlanner {

	private Collection<TablePlanner> tableplanners = new ArrayList<TablePlanner>();

	/**
	 * Creates an optimized left-deep query plan using the following
	 * heuristics.
	 * H1. Choose the smallest table (considering selection predicates)
	 * to be first in the join order.
	 * H2. Add the table to the join order which
	 * results in the smallest output.
	 */
	public Plan createPlan(Plan p1, Plan p2, String fldname1, String fldname2, Transaction tx) {
		
		return new MergeJoinPlan(p1, p2, fldname1, fldname2, tx);
	}

	@Override
	public Plan createPlan(QueryData data, Transaction tx) {
		// TODO Auto-generated method stub
		return null;
	}

}
